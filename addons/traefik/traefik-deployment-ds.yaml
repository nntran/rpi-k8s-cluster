# https://docs.traefik.io/routing/providers/kubernetes-ingress/
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: traefik
  labels:
    app.kubernetes.io/name: traefik
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: ingress-controller
      app.kubernetes.io/name: traefik
      app.kubernetes.io/version: "2.7"
  template:
    metadata:
      labels:
        app.kubernetes.io/component: ingress-controller
        app.kubernetes.io/name: traefik
        app.kubernetes.io/version: "2.7"
    spec:
      # hostNetwork: true
      # dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: traefik
      terminationGracePeriodSeconds: 60
      # Allow to deploy on master nodes
      # https://stackoverflow.com/questions/41999756/how-to-force-pods-deployments-to-master-nodes
      # https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      # Nodes selector
      # Only master nodes and under Linux OS
      # nodeSelector:
      #   node.role: master
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
                  # AND operator
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
      containers:
        - name: traefik
          image: traefik:v2.7 #v2.4.0 bug detected with K8S v 1.23.5 => dashboard not load using ingress
          imagePullPolicy: Always
          args:
            - --configfile=/etc/traefik/traefik.yaml
          ports:
            - name: http
              protocol: TCP
              containerPort: 80
            - name: https
              protocol: TCP
              containerPort: 443
            - name: admin
              protocol: TCP
              containerPort: 8080
            - name: streaming
              protocol: UDP
              containerPort: 1704
            - name: logstash
              protocol: TCP
              containerPort: 5044
          resources:
            requests:
              cpu: 100m
              memory: 20Mi
            limits:
              cpu: 200m
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          volumeMounts:
            - name: config
              mountPath: /etc/traefik
      volumes:
        - name: config
          configMap:
            name: traefik-config
            defaultMode: 420
